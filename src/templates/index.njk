{% set page = 'Calculadora de Ahorros' %}
{% set form = 'calculadora-de-ahorros-form' %}
{% set help = '<span class="example">Ejemplo:</span>Encuentra el total de dinero ahorrado a partir de una cantidad inicial de $1,000 y/o un aporte regular de $200 cada mes durante 15 años, ganando un interés de 6.0%.<br><br><span class="example">Respuesta:</span>$58,699.95.' %}
{% set help = '' %}
{% extends "_base.njk" %}
{%  block validation %}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form1 = document.getElementById('calculadora-de-ahorros-form');
            const fv1 = FormValidation
                .formValidation(form1, {
                    locale: 'es_ES',
                    localization: FormValidation.locales.es_ES,
                    fields: {
                        ini_dep: {
                            validators: {
                                //notEmpty: {},
                                greaterThan: {
                                    inclusive: true,
                                    min: 0,
                                },
                                numeric: {
                                    thousandsSeparator: '',
                                    decimalSeparator: '.'
                                }
                            }
                        },
                        reg_dep: {
                            validators: {
                                //notEmpty: {},
                                greaterThan: {
                                    inclusive: true,
                                    min: 0,
                                },
                                numeric: {
                                    thousandsSeparator: '',
                                    decimalSeparator: '.'
                                }
                            }
                        },
                        num_of_years: {
                            validators: {
                                notEmpty: {},
                                greaterThan: {
                                    inclusive: true,
                                    min: 0.001,
                                },
                                numeric: {
                                    thousandsSeparator: '',
                                    decimalSeparator: '.'
                                }
                            }
                        },
                        rate: {
                            validators: {
                                notEmpty: {},
                                between: {
                                    inclusive: true,
                                    min: 0,
                                    max: 100,
                                },
                                numeric: {
                                    thousandsSeparator: '',
                                    decimalSeparator: '.'
                                }
                            }
                        },
                        extra_dep: {
                            validators: {
                                notEmpty: {},
                                greaterThan: {
                                    inclusive: true,
                                    min: 0,
                                }
                            }
                        },
                        extra_dep_start: {
                            validators: {
                                notEmpty: {},
                                between: {
                                    inclusive: true,
                                    min: 1,
                                    max: 12,
                                },
                                numeric: {
                                    thousandsSeparator: '',
                                    decimalSeparator: '.'
                                }
                            }
                        },

                    },
                    plugins: {
                        trigger: new FormValidation.plugins.Trigger(),
                        bulma: new FormValidation.plugins.Bulma(),
                        submitButton: new FormValidation.plugins.SubmitButton(),
                        icon: new FormValidation.plugins.Icon({
                            valid: 'fa fa-check',
                            invalid: 'fa fa-times',
                            validating: 'fa fa-refresh'
                        }),
                    },
                })
                .on('core.form.valid', function () {
                    app.calculate($('.page-title .card-header-title').text());
                });

            $('#num_of_years, #freq').change(function () {
                let num_of_years = form1.querySelector('#num_of_years').value;
                let freq = form1.querySelector('#freq').value;

                fv1.updateValidatorOption('extra_dep_start', 'between', 'max', num_of_years * freq);
                fv1.revalidateField('extra_dep_start');
            });
        });
    </script>
{% endblock %}
